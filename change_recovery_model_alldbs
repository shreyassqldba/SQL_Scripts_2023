USE [msdb]
GO


/****** Job [DBA- Change Recovery Model]    ******/
BEGIN TRANSACTION


IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs_view  WHERE name = N'DBA- Change Recovery Model')
EXEC msdb.dbo.sp_delete_job @job_name=N'DBA- Change Recovery Model', @delete_unused_schedule=1


DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 12-07-2023 10:31:50 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback


END


DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'DBA- Change Recovery Model', 
        @enabled=1, 
        @notify_level_eventlog=0, 
        @notify_level_email=0, 
        @notify_level_netsend=0, 
        @notify_level_page=0, 
        @delete_level=0, 
        @description=N'No description available.', 
        @category_name=N'[Uncategorized (Local)]', 
        @owner_login_name=N'sa', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Change Recovery Model to Simple]    Script Date: 12-07-2023 10:31:50 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Change Recovery Model to Simple', 
        @step_id=1, 
        @cmdexec_success_code=0, 
        @on_success_action=1, 
        @on_success_step_id=0, 
        @on_fail_action=2, 
        @on_fail_step_id=0, 
        @retry_attempts=0, 
        @retry_interval=0, 
        @os_run_priority=0, @subsystem=N'TSQL', 
        @command=N'use [master]
go
 
-- Declare variable for each database name
declare @databaseName nvarchar(128)
 
-- Define the cursor
declare databaseCursor cursor
 
-- Define the cursor dataset
for
select [name] from sys.databases where recovery_model_desc = ''Full''
 
-- Start loop
open databaseCursor
 
-- Get information from the first row
fetch next from databaseCursor into @databaseName
 
-- Loop until there are no more rows
while @@fetch_status = 0
begin
 print ''Setting recovery model to Simple for database ['' + @databaseName + '']''
 exec(''alter database ['' + @databaseName + ''] set recovery Simple'')
 
-- Get information from next row
 fetch next from databaseCursor into @databaseName
end
 
-- End loop and clean up
close databaseCursor
deallocate databaseCursor
go
', 
        @database_name=N'master', 
        @flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'shrink logs', 
        @enabled=1, 
        @freq_type=8, 
        @freq_interval=1, 
        @freq_subday_type=1, 
        @freq_subday_interval=0, 
        @freq_relative_interval=0, 
        @freq_recurrence_factor=1, 
        @active_start_date=20200731, 
        @active_end_date=99991231, 
        @active_start_time=20000, 
        @active_end_time=235959, 
        @schedule_uid=N'47e9e579-8828-4390-a64a-4ab122fd2285'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:
GO
